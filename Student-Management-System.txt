
create database SISDB;
use SISDB;
create table students( 
student_id int primary key, 
first_name varchar(255),
last_name varchar(255),
date_of_birth DATE,
email varchar(255),
phone_number int);

create table teacher( 
teacher_id int primary key, 
first_name varchar(255),
last_name varchar(255),
email varchar(255));

create table payments( 
payment_id int primary key, 
student_id int,
amount int,
payment_date date,
foreign key (student_id) references students (student_id));

create table courses( 
course_id int primary key, 
course_name varchar(255),
credits int,
amount int,
teacher_id int,
foreign key (teacher_id) references teacher (teacher_id));

create table enrollments( 
enrollment_id int primary key, 
student_id int,
course_id int,
enrollment_date date,
foreign key (student_id) references students (student_id),
foreign key (course_id) references courses (course_id));


INSERT INTO students (student_id ,first_name, last_name, date_of_birth, email, phone_number)
VALUES
(1,'harry', 'potter', '2000-04-11', 'harry@hogwards.com', 123451),
(2,'ronald', 'weasley', '2000-02-29','ronald@hogwards.com', 321450001),
(3,'hermione', 'granger', '1999-11-25','hermione@hogwards.com', 2348882),
(4,'draco', 'malfoy', '2000-01-21', 'draco@hogwards.com', 33334573),
(5,'ginni', 'weasley', '1999-05-14','ginni@hogwards.com', 44456324);

INSERT INTO teacher (teacher_id ,first_name, last_name, email)
VALUES
(1,'albert', 'anderson', 'albert@hogwards.com'),
(2,'willam', 'smith','williamd@hogwards.com'),
(3,'andrej', 'kaepathy','andrej@hogwards.com'),
(4,'rajesh', 'arora', 'rajesh@hogwards.com'),
(5,'bruce', 'altman','bruce@hogwards.com');

INSERT INTO payments (payment_id ,student_id, amount, payment_date)
VALUES
(1, 1 , 5000, '2001-04-11'),
(2, 2 , 4000, '2001-09-21'),
(3, 3 , 15000, '2000-04-13'),
(4, 4 , 4000, '2000-05-18'),
(5, 5 , 1000, '2000-08-19');

insert into courses (course_id, course_name, credits, amount, teacher_id) values
(1,'Physics', 120, 12000,1),
(2,'Chemistry', 80, 8000,2),
(3,'Maths', 60, 7000,3),
(4,'Bio', 70, 8000,4),
(5,'History', 100, 8080,5);


insert into enrollments (enrollment_id, student_id, course_id, enrollment_date) values
(1,1,1,'2001-04-11'),
(2,2,2,'2001-09-21'),
(3,3,3,'2000-04-13'),
(4,4,4,'2000-05-18'),
(5,5,5,'2000-08-19');







-- 1 
insert into students (student_id ,first_name, last_name, date_of_birth, email, phone_number)
values
(6, 'John', 'Doe', '1995-08-15', 'john.doe@example.com', 1234567890);
select * from students;
/*
# student_id, first_name, last_name, date_of_birth, email, phone_number
1, harry, potter, 2000-04-11, harry@hogwards.com, 123451
2, ronald, weasley, 2000-02-29, ronald@hogwards.com, 321450001
3, hermione, granger, 1999-11-25, hermione@hogwards.com, 2348882
5, ginni, weasley, 1999-05-14, ginni@hogwards.com, 44456324
6, John, Doe, 1995-08-15, john.doe@example.com, 1234567890
*/
-- 2
insert into enrollments (enrollment_id, student_id, course_id, enrollment_date) values
(6,5,1,'2000-03-23');
select * from enrollments;
/*
# enrollment_id, student_id, course_id, enrollment_date
1, 1, 1, 2001-04-11
2, 2, 2, 2001-09-21
3, 3, 3, 2000-04-13
5, 5, 5, 2000-08-19
6, 5, 1, 2000-03-23
*/
-- 3

update teacher
set email = 'albert.anderson@hogwarts.edu'
where teacher_id = 1;
select * from teacher;
/*
# teacher_id, first_name, last_name, email
1, albert, anderson, albert.anderson@hogwarts.edu
2, willam, smith, williamd@hogwards.com
3, andrej, kaepathy, andrej@hogwards.com
4, rajesh, arora, rajesh@hogwards.com
5, bruce, altman, bruce@hogwards.com
*/

-- 4
delete from enrollments
where student_id = 3 and course_id = 3;
select * from enrollments;
/*
# enrollment_id, student_id, course_id, enrollment_date
1, 1, 1, 2001-04-11
2, 2, 2, 2001-09-21
5, 5, 5, 2000-08-19
6, 5, 1, 2000-03-23

*/

-- 5
update courses
set teacher_id = 4
where course_id = 2;
select * from courses;
/*
# course_id, course_name, credits, amount, teacher_id
1, Physics, 120, 12000, 1
2, Chemistry, 80, 8000, 4
3, Maths, 60, 7000, 3
4, Bio, 70, 8000, 4
5, History, 100, 8080, 5

*/


-- 6
delete from  students
where student_id = 4;
delete from enrollments
where student_id = 4;
delete from payments
where student_id = 4;





-- 7
update payments
set amount = 6000
where payment_id = 2;




-- task 3


-- 1
select s.*, sum(p.amount) as total_payments
from students s join payments p on s.student_id=p.student_id
where s.student_id=3
group by s.student_id;


/*
# student_id, first_name, last_name, date_of_birth, email, phone_number, total_payments
3, hermione, granger, 1999-11-25, hermione@hogwards.com, 2348882, 15000

*/
-- 2
select c.course_name, count(e.student_id) as student_count
from courses c left join enrollments e on c.course_id = e.course_id
group by c.course_id;
/* # course_name, student_count
# course_name, student_count
Physics, 2
Chemistry, 1
Maths, 0
Bio, 0
History, 1

*/


-- 3
select s.*
from students s left join enrollments e on e.student_id = s.student_id
where e.enrollment_id is  null;
/*
# student_id, first_name, last_name, date_of_birth, email, phone_number
3, hermione, granger, 1999-11-25, hermione@hogwards.com, 2348882
6, John, Doe, 1995-08-15, john.doe@example.com, 1234567890
*/
-- 4.
select s.first_name, s.last_name, c.course_name
from students s join enrollments e on s.student_id = e.student_id
join courses c on  e.course_id = c.course_id;
/*
harry	potter	Physics
ronald	weasley	Chemistry
ginni	weasley	History
ginni	weasley	Physics
*/
-- 5
select t.first_name, t.last_name, c.course_name
from teacher t join courses c on t.teacher_id = c.teacher_id;
/*
# first_name, last_name, course_name
albert, anderson, Physics
andrej, kaepathy, Maths
rajesh, arora, Chemistry
rajesh, arora, Bio
bruce, altman, History

*/
-- 6.
select s.*,e.enrollment_date
from students s
join enrollments e on s.student_id=e.student_id
join courses c on e.course_id=c.course_id
where c.course_name = 'physics';


/*
# student_id, first_name, last_name, date_of_birth, email, phone_number, enrollment_date
1, harry, potter, 2000-04-11, harry@hogwards.com, 123451, 2001-04-11
5, ginni, weasley, 1999-05-14, ginni@hogwards.com, 44456324, 2000-03-23

*/
-- 7
select s.first_name, s.last_name
from students s left join payments p on s.student_id=p.student_id
where p.payment_id is null;

-- 'John', 'Doe'

-- 8
select c.course_name
from courses c left join enrollments e on e.course_id=c.course_id
where e.enrollment_id is null;


-- Maths
-- Bio

-- 9
select s.first_name,s.last_name, count(e.enrollment_id) as courses_enrolled
from students s join enrollments e on s.student_id=e.student_id
group by s.student_id
having courses_enrolled>1;
-- ginni	weasley	2

-- 10
select t.*
from teacher t LEFT JOIN courses c ON c.teacher_id=t.teacher_id
where c.course_id is null;

-- '2', 'willam', 'smith', 'williamd@hogwards.com'

-- Task 4

-- 1
select c.course_name, avg(s.student_id) as avg_student
from students s join enrollments e on s.student_id=e.student_id
join courses c on c.course_id=e.course_id
group by c.course_id;
/*
# course_name, avg_student
Physics, 3.0000
Chemistry, 2.0000
History, 5.0000

*/
-- 2
select s.*,p.amount as highest_payment
from students s join payments p on s.student_id=p.student_id
order by p.amount desc;
/*
# student_id, first_name, last_name, date_of_birth, email, phone_number, highest_payment
3, hermione, granger, 1999-11-25, hermione@hogwards.com, 2348882, 15000
2, ronald, weasley, 2000-02-29, ronald@hogwards.com, 321450001, 6000
1, harry, potter, 2000-04-11, harry@hogwards.com, 123451, 5000
5, ginni, weasley, 1999-05-14, ginni@hogwards.com, 44456324, 1000
*/

-- 3
select c.course_name, count(e.enrollment_id) as course_count
from courses c join enrollments e on c.course_id=e.course_id
group by c.course_id
order by course_count desc
limit 1;

/*
output
# course_name, course_count
Physics, 2

*/
-- 4
select t.*, sum(p.amount) as total_payment
from students s join enrollments e ON s.student_id=e.student_id
join courses c ON c.course_id=e.course_id
join payments p ON s.student_id=p.student_id
join teacher t ON c.teacher_id=t.teacher_id
group by t.teacher_id;
/*
output
# teacher_id, first_name, last_name, email, total_payment
1, albert, anderson, albert.anderson@hogwarts.edu, 6000
4, rajesh, arora, rajesh@hogwards.com, 6000
5, bruce, altman, bruce@hogwards.com, 1000

*/
-- 5


select s.*
from students s
join enrollments e ON s.student_id = e.student_id
group by s.student_id
having count( e.course_id) = (select count(*) from courses);

-- 6
select *
from teacher
where teacher_id not in(select t.teacher_id from courses c 
join teacher t on c.teacher_id=t.teacher_id);
/*
'2', 'willam', 'smith', 'williamd@hogwards.com'
*/

-- 8
select *
from courses
where course_id not in (select c.course_id
from courses c join enrollments e on
c.course_id=e.course_id);
/*
# course_id, course_name, credits, amount, teacher_id
3, Maths, 60, 7000, 3
4, Bio, 70, 8000, 4
*/
-- 9


select s.*, c.course_name, sum(p.amount) as total_pay
from students s join enrollments e on s.student_id = e.student_id
join courses c on e.course_id = c.course_id
join  payments p on  s.student_id = p.student_id
group by s.student_id, c.course_id;
/* output
# student_id, first_name, last_name, date_of_birth, email, phone_number, course_name, total_pay
5, ginni, weasley, 1999-05-14, ginni@hogwards.com, 44456324, History, 1000
5, ginni, weasley, 1999-05-14, ginni@hogwards.com, 44456324, Physics, 1000
1, harry, potter, 2000-04-11, harry@hogwards.com, 123451, Physics, 5000
2, ronald, weasley, 2000-02-29, ronald@hogwards.com, 321450001, Chemistry, 6000

*/

-- 10
select s.*, count(p.payment_id) as payment_times
from students s join payments p on s.student_id=p.student_id
group by s.student_id
having payment_times > 1;
-- 11
select s.*, sum(p.amount) as total_payment
from payments p join students s on s.student_id=p.student_id
group by s.student_id;

/*
output
# student_id, first_name, last_name, date_of_birth, email, phone_number, total_payment
1, harry, potter, 2000-04-11, harry@hogwards.com, 123451, 5000
2, ronald, weasley, 2000-02-29, ronald@hogwards.com, 321450001, 6000
3, hermione, granger, 1999-11-25, hermione@hogwards.com, 2348882, 15000
5, ginni, weasley, 1999-05-14, ginni@hogwards.com, 44456324, 1000
 
*/
-- 12
select c.course_name, count(e.student_id) as student_count
from courses c join enrollments e on c.course_id=e.course_id
group by c.course_id;
/*
# course_name, student_count
Physics, 2
Chemistry, 1
History, 1
*/ 

-- 13

select s.*, avg(p.amount) as avg_pay
from payments p join students s ON s.student_id=p.student_id
group by s.student_id;


/*
# student_id, first_name, last_name, date_of_birth, email, phone_number, avg_pay
1, harry, potter, 2000-04-11, harry@hogwards.com, 123451, 5000.0000
2, ronald, weasley, 2000-02-29, ronald@hogwards.com, 321450001, 6000.0000
3, hermione, granger, 1999-11-25, hermione@hogwards.com, 2348882, 15000.0000
5, ginni, weasley, 1999-05-14, ginni@hogwards.com, 44456324, 1000.0000

*/